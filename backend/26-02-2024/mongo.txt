show databases
use mystore



Syntax : db.<COLLECTION NAME>.<OPERATION>(<FILTER OBJECT>)

Comparision Operators
$eq => equals to ==
$gt => greater then >
$lt => less then <
$gte => greater then equals to >=
$lte => less then equals to <=

Find all the products whose price is greater than 500
db.products.find({ 
    price : {
        $gt: 500
    }
})

Find all the products whose price is less than 500
db.products.find({ 
    price : {
        $lt: 500
    }
})

Find all the products whose price is less than or euqals to 500
db.products.find({ 
    price : {
        $lte: 500
    }
})

Find all the products whose price is 500
db.products.find({ 
    price : {
        $eq: 500
    }
})

db.products.find({ 
    price: 500
})


Logical Operators

$and
$or

Find all the products whose price is between 100 and 300
// if(price >= 100 && prices <=300)
db.products.find({
    price: {
        $gte: 100,
        $lte: 300
    }
})

Find all the products whose price is either 100 or 300
// if(price == 100 || price == 300)
db.products.find({
    $or : [
        {price: 100},
        {price: 300}
    ]
})

Find all the products whose price is less then 100 and rating are greater then 4.8
db.products.find({
    $and: [
        { price: { $lt: 100 } },
        { rating: { $gt: 4.8 } }
    ]
})

db.products.find({
    price: { $lt: 100 },
    rating: { $gt: 4.8 }
})

db.products.find({
    _id: ObjectId("65dca6dc7c620979b0c9a4f7")
})


Find all the products whose price is less then 100 and rating are greater then 4.8 in increasing order of their rating
db.products.find({
    price: { $lt: 100 },
    rating: { $gt: 4.8 }
})
.sort({
    rating: 1
})


Insertion 

db.<COLLECTION NAME>.insertOne(<DOCUMENT OBJECT>)
db.<COLLECTION NAME>.insertMany(<ARRAY OF DOCUMENT OBJECT>)

db.products.insertOne({
    "id": 101,
    "title": "iPhone 15",
    "description": "An apple mobile which is nothing like apple",
    "price": 999,
    "discountPercentage": 0,
    "rating": 3,
    "stock": 250,
    "brand": "Apple",
    "category": "smartphones",
    "thumbnail": "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg",
    "images": [
      "https://cdn.dummyjson.com/product-images/1/1.jpg",
      "https://cdn.dummyjson.com/product-images/1/2.jpg",
      "https://cdn.dummyjson.com/product-images/1/3.jpg",
      "https://cdn.dummyjson.com/product-images/1/4.jpg",
      "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg"
    ]
  })

db.products.insertMany([{
    "id": 101,
    "title": "iPhone 15",
    "description": "An apple mobile which is nothing like apple",
    "price": 999,
    "discountPercentage": 0,
    "rating": 3,
    "stock": 250,
    "brand": "Apple",
    "category": "smartphones",
    "thumbnail": "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg",
    "images": [
      "https://cdn.dummyjson.com/product-images/1/1.jpg",
      "https://cdn.dummyjson.com/product-images/1/2.jpg",
      "https://cdn.dummyjson.com/product-images/1/3.jpg",
      "https://cdn.dummyjson.com/product-images/1/4.jpg",
      "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg"
    ]
  },
  {
    "id": 101,
    "title": "iPhone 15",
    "description": "An apple mobile which is nothing like apple",
    "price": 999,
    "discountPercentage": 0,
    "rating": 3,
    "stock": 250,
    "brand": "Apple",
    "category": "smartphones",
    "thumbnail": "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg",
    "images": [
      "https://cdn.dummyjson.com/product-images/1/1.jpg",
      "https://cdn.dummyjson.com/product-images/1/2.jpg",
      "https://cdn.dummyjson.com/product-images/1/3.jpg",
      "https://cdn.dummyjson.com/product-images/1/4.jpg",
      "https://cdn.dummyjson.com/product-images/1/thumbnail.jpg"
    ]
  }])


db.<COLLECTION_NAME>.updateOne(<FIND_OBJECT>,<UPDATE_OBJECT>)
db.<COLLECTION_NAME>.updateMany(<FIND_OBJECT>,<UPDATE_OBJECT>)

Update all the products discountPercentage to 10 whose price is greater then 500
<!-- db.products.find({price: { $gt : 500 }}) -->
db.products.updateOne({price: { $gt : 500 } }, { $set: { discountPercentage: 10 } } )
db.products.updateOne({price: { $gt : 500}, brand: "Apple"  }, { $set: { discountPercentage: 10, images: ["asdfasdf","asdfasdf"]  } } )

Delete all the products matching x criteria
db.products.deleteOne({})
db.products.deleteMany({})
